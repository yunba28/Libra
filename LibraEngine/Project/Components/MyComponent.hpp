#pragma once

#include "../ProjectCommons.hpp"

/// @brief テスト用のユーザー定義のComponent
class MyComponent : public Libra::Component
{
public:

	/*-------------------------------------------------*/
	/*コンポーネントの初期化を行う関数                    */
	/*リソースの確保がこの関数の主な役割です               */
	/*-------------------------------------------------*/
	void construct()override;

	/*-------------------------------------------------*/
	/*コンポーネントの終了処理を行う関数                  */
	/*リソースの解放などがこの関数の役割です              */
	/*-------------------------------------------------*/
	void destruct()override;

	/*-------------------------------------------------*/
	/*コンポーネントが最初の更新を行う際                  */
	/*一度だけ呼ばれる関数                               */
	/*-------------------------------------------------*/
	void start()override;

	/*-------------------------------------------------*/
	/*毎フレーム呼ばれる更新関数                         */
	/*setEnableUpdate関数でfalseを指定すると無効になります*/
	/*-------------------------------------------------*/
	void update()override;

	/*-------------------------------------------------*/
	/*毎フレーム呼ばれる描画関数                         */
	/*この関数を使用する際はsetEnableDraw関数にtrueを渡す */
	/*だけでなく, DrawableComponentを継承してください     */
	/*-------------------------------------------------*/
	void draw()const override;

	/*-------------------------------------------------*/
	/*コンポーネントが有効になった際に呼ばれる関数         */
	/*-------------------------------------------------*/
	void onActive()override;

	/*-------------------------------------------------*/
	/*コンポーネントが無効になった際に呼ばれる関数         */
	/*-------------------------------------------------*/
	void onInactive()override;

	/*-------------------------------------------------*/
	/*コンポーネントが衝突した時に呼ばれる関数             */
	/*使用する際はapplyFixedUpdateをconstruct等で呼んでください*/
	/*-------------------------------------------------*/
	void onCollisionEnter([[maybe_unused]] const Libra::Collision& _collision)override;

	/*-------------------------------------------------*/
	/*コンポーネントが衝突している間呼ばれる関数           */
	/*使用する際はapplyFixedUpdateをconstruct等で呼んでください*/
	/*-------------------------------------------------*/
	void onCollisionStay([[maybe_unused]] const Libra::Collision& _collision)override;

	/*-------------------------------------------------*/
	/*コンポーネントの衝突が終わった時に呼ばれる関数        */
	/*使用する際はapplyFixedUpdateをconstruct等で呼んでください*/
	/*-------------------------------------------------*/
	void onCollisionExit([[maybe_unused]] const Libra::Collision& _collision)override;

};
